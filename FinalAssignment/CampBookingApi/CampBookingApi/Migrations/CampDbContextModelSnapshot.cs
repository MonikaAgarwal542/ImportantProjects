// <auto-generated />
using System;
using CampBookingApi.Repository;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

namespace CampBookingApi.Migrations
{
    [DbContext(typeof(CampDbContext))]
    partial class CampDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "3.1.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("CampBookingApi.Repository.Entites.Users", b =>
                {
                    b.Property<int>("UserId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.Property<DateTime>("MemberSince")
                        .HasColumnType("datetime2");

                    b.Property<string>("Password")
                        .HasColumnType("nvarchar(100)")
                        .HasMaxLength(100);

                    b.HasKey("UserId");

                    b.ToTable("Users");
                });

            modelBuilder.Entity("Data_Access_layer.Repository.Entities.Booking", b =>
                {
                    b.Property<int>("Bookingid")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<string>("Adress")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Bookingfrom")
                        .HasColumnType("datetime2");

                    b.Property<string>("Bookingreferencenumber")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime>("Bookingto")
                        .HasColumnType("datetime2");

                    b.Property<int>("Campid")
                        .HasColumnType("int");

                    b.Property<long>("Cellphone")
                        .HasColumnType("bigint");

                    b.Property<string>("Country")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("State")
                        .HasColumnType("nvarchar(max)");

                    b.Property<long>("Totalprice")
                        .HasColumnType("bigint");

                    b.Property<int>("Totalstay")
                        .HasColumnType("int");

                    b.Property<int>("Userid")
                        .HasColumnType("int");

                    b.Property<int>("Zipcode")
                        .HasColumnType("int");

                    b.HasKey("Bookingid");

                    b.ToTable("Bookings");
                });

            modelBuilder.Entity("Data_Access_layer.Repository.Entities.Camps", b =>
                {
                    b.Property<int>("CampId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<DateTime>("Availablefrom")
                        .HasColumnType("datetime2");

                    b.Property<DateTime>("Availableto")
                        .HasColumnType("datetime2");

                    b.Property<int>("Bookingid")
                        .HasColumnType("int");

                    b.Property<string>("Campname")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Capacity")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("Imageurl")
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("Ratepernightforweekdays")
                        .HasColumnType("int");

                    b.Property<int>("Ratepernightforweekend")
                        .HasColumnType("int");

                    b.HasKey("CampId");

                    b.ToTable("Camps");
                });

            modelBuilder.Entity("Data_Access_layer.Repository.Entities.Ratings", b =>
                {
                    b.Property<int>("RatingId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<int>("Campid")
                        .HasColumnType("int");

                    b.Property<int?>("CampsCampId")
                        .HasColumnType("int");

                    b.Property<int>("Rating")
                        .HasColumnType("int");

                    b.Property<int>("userid")
                        .HasColumnType("int");

                    b.HasKey("RatingId");

                    b.HasIndex("CampsCampId");

                    b.ToTable("Ratings");
                });

            modelBuilder.Entity("Data_Access_layer.Repository.Entities.Ratings", b =>
                {
                    b.HasOne("Data_Access_layer.Repository.Entities.Camps", null)
                        .WithMany("rating")
                        .HasForeignKey("CampsCampId");
                });
#pragma warning restore 612, 618
        }
    }
}
